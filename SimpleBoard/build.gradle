/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    //web application achive
    id 'war'
    //gradle lombok plugin
    id "io.freefair.lombok" version "5.1.0"
}

repositories {
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:28.2-jre'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    //servlet api, jsp api
    providedCompile "javax.servlet:javax.servlet-api:4.0.+"
    providedCompile "javax.servlet.jsp:javax.servlet.jsp-api:2.3.+"
    
    //jstl (jsp standard tag libraries)
    runtimeOnly "org.apache.taglibs:taglibs-standard-spec:+"
    runtimeOnly "org.apache.taglibs:taglibs-standard-impl:+"
    
    //Spring Framework
    implementation "org.springframework:spring-context:5.+"
    implementation "org.springframework:spring-webmvc:5.+"
    implementation "org.springframework:spring-jdbc:5.+"
    
    //lombok
    implementation "org.projectlombok:lombok:1.+"
    
    //log4j2 logger
    implementation "org.apache.logging.log4j:log4j-api:2.+"
    implementation "org.apache.logging.log4j:log4j-core:2.+"
    
    //reflections
    //implementation "org.reflections:reflections:+"
}

//clear
task clear (type: Delete) {
	delete 'build','dist'
	}

//make dist/WEB-INF/classes	
task makeclasses(dependsOn:compileJava, type: Copy) {
	from 'build/classes/java/main'
	from 'src/main/resources'
	into 'dist/WEB-INF/classes'
	}
	
//make dist/WEB-INF/lib
task makelib(type: Sync) {
	from configurations.runtimeClasspath.minus(configurations.providedCompile)
	into 'dist/WEB-INF/lib'
	}
	
//make dist web
task makeweb(type :Copy) {
	from 'src/main/webapp'
	into 'dist'
	}
	
//make dist full
task makedist(dependsOn: [makeclasses, makelib, makeweb])

//dist web
task distweb(dependsOn:makeweb, type: Copy) {
	from ('dist') {exclude 'META-INF', 'WEB-INF'}
	from ('dist') {include 'WEB-INF/jsp/**'}
	into "$target"
	}
	
//dist full
task dist(dependsOn:makedist, type: Sync) {
	from 'dist'
	into "$target"
	}
